doctype html
html(lang='en')
mixin notes
  aside(class='notes')
    block

mixin codeexample
  pre.fragment.dimcode
    block

mixin codeblock
  span.fragment.dimcode
    br
    block
    br

head
    meta(charset='utf-8')
    title reveal.js - The HTML Presentation Framework
    meta(name='description', content='A framework for easily creating beautiful presentations using HTML')
    meta(name='author', content='Hakim El Hattab')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black-translucent')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui')
    link(rel='stylesheet', href='css/reveal.css')
    link#theme(rel='stylesheet', href='css/theme/black.css')
    // Code syntax highlighting
    link(rel='stylesheet', href='lib/css/zenburn.css')
    // Printing and PDF exports
    link(rel='stylesheet', href='css/extra-components.css')
    script.
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    //if lt IE 9
      script(src='lib/js/html5shiv.js')

  body
    .reveal
      // Any section element inside of this container is displayed as a slide
      .slides
        block slides
    script(src='lib/js/head.min.js')
    script(src='js/reveal.js')
    script.
      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      controls: true,
      progress: true,
      history: true,
      center: true,
      transition: 'slide', // none/fade/slide/convex/concave/zoom
      // Optional reveal.js plugins
      dependencies: [
      { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
      { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/highlight/highlight.js', async: true, callback: function() {
          [].forEach.call( document.querySelectorAll( '.highlight' ), function( v, i) {
              hljs.highlightBlock(v);
          });
      } },
      // { src: 'plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() { hljs.initHighlightingOnLoad(); } },
      { src: 'plugin/zoom-js/zoom.js', async: true },
      { src: 'plugin/notes/notes.js', async: true }
      ]
      });
